<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\DepartmentController;
use App\Http\Controllers\DesignationController;
use App\Http\Controllers\ChannelController;
use App\Http\Controllers\CasteController;
use App\Http\Controllers\UserController;
use App\Http\Controllers\WebsitePlanController;
# department routes group
/*
    There are different methods to manage master data. One of these methods involves using master data routes, which help organizations keep track of the different types of master data they have. These routes can be customized to fit the organization's specific needs and can be used to manage everything from customer data to product data. By incorporating master data routes into their data management strategy, organizations can improve data accuracy, reduce data duplication, and increase efficiency.
*/
/*
    A key responsibility for any manager is to manage their department. This means overseeing the day-to-day operations, ensuring that all employees are working efficiently and effectively, and addressing any issues that arise. In order to be a successful manager, it is also important to have a clear understanding of the master route. This refers to the overall strategy and direction of the company, and how the department fits into and supports that strategy. By aligning the department's goals and activities with the master route, a manager can help ensure that the department is contributing to the company's success in a meaningful way. Therefore, managing the department and understanding the master route are both critical components of effective management.
*/

Route::get('department-master', [DepartmentController::class, 'index'])->name('departmentmaster');
/*
    In order to ensure the smooth functioning of the department, it is important to maintain accurate and up-to-date master data. This includes information on the department's personnel, equipment, inventory, and other resources. Additionally, it is important to regularly review and update this data to ensure that it remains relevant and useful. By doing so, the department can make informed decisions and effectively allocate resources to meet its goals and objectives. Furthermore, having comprehensive master data can also help the department identify areas for improvement, streamline processes, and enhance overall efficiency and productivity.
*/
Route::post('save-department-master', [DepartmentController::class, 'store'])->name('savedepartmentmaster');
/*
    To obtain a comprehensive list of all departments, you may want to consult various resources. For instance, you will find information about all the departments, their functions, and the people in charge. Additionally, you can reach out to the HR department and ask for a list of all the departments along with their contact information.
*/
Route::get('get-all-departments', [DepartmentController::class, 'getallDepartment'])->name('getalldepartments');
/*
   It appears that the user wants to delete a department from a list. In order to do so, they may need to provide more information, such as the name of the list and the specific department they want to remove. It is important to ensure that the department being removed is no longer needed and that any necessary changes to related systems or processes are made. Additionally, it may be helpful to consider the impact of this change on other areas of the organization, such as staffing or workflow. Overall, careful consideration and planning are key to successfully deleting a department from a list.
*/
Route::get('delete-department', [DepartmentController::class, 'deleteDepartment'])->name('deletedepartment');
/*
 To obtain a comprehensive list of all departments, you may want to consult various resources. For instance, you will find information about all the departments, their functions, and the people in charge. Additionally, you can reach out to the HR department and ask for a list of all the departments along with their contact information.
*/
Route::get('department-json', [DepartmentController::class, 'getDepartmentJson'])->name('departmentjson');
#designation
/* In order to view the designation master page, you will need to follow a few simple steps. Firstly, ensure that you are logged in to your account. Once you have done so, navigate to the main menu and select "Designations". From here, you will be able to access the designation master page which contains all of the information and tools you need to manage your designations. Remember to take your time and explore all of the different features available to you in order to make the most of this powerful tool. */
Route::get('designation-master', [DesignationController::class, 'index'])->name('designationmaster');
/* To complete the task of saving a new record into a department, there are several steps that must be taken. First, it is necessary to identify the department where the new record will be saved. This can involve researching the department's structure and determining the appropriate location for the record within that structure.

Once the department has been identified, the next step is to determine the format in which the new record should be saved. This can involve selecting the appropriate database or file format and ensuring that the record is properly formatted and labeled.

Another important consideration when saving a new record into a department is security. It is essential to ensure that the record is protected from unauthorized access and that only authorized individuals have the necessary permissions to view or modify the record.

Finally, it is important to establish a system for maintaining and updating the record over time. This can involve setting up regular backups and implementing procedures for reviewing and updating the record as needed to ensure that it remains accurate and up-to-date. */
Route::post('save-designation-master', [DesignationController::class, 'store'])->name('savedesignationmaster');
/* To ensure that you have a comprehensive overview of your designations, it is important to obtain a list of all saved and active designations. This will allow you to better understand the current status of each designation, including any ongoing tasks or requirements that need to be fulfilled. Additionally, having access to this information can help you identify any potential issues or areas for improvement, such as designations that may be nearing expiration or ones that have not been updated in some time. By taking proactive steps to manage and maintain your designations, you can ensure that they remain up-to-date and relevant, which can ultimately help you achieve your goals more effectively. */
Route::get('get-all-designations', [DesignationController::class, 'getallDesignation'])->name('getalldesignations');
/* In order to remove a designation from a list, you can either mark it as inactive or delete it entirely. When you mark a designation as inactive, it will still be visible in the list but will not be available for selection. On the other hand, when you delete a designation, it will be permanently removed from the list and cannot be recovered. It is important to consider which option is best for your needs before making a final decision. */
Route::get('delete-designation', [DesignationController::class, 'deleteDesignation'])->name('deletedesignation');
/* Our goal is to make sure users are seamlessly redirected to the dashboard page view. This is important because the dashboard is the central hub for all the information that users need. By providing them with quick access to their account information, recent activity, and other important updates, we ensure that they have the best experience possible on our platform. We are constantly working to improve the dashboard and make it more user-friendly, so that users can easily find what they need and complete their tasks with ease. We understand that navigating a complex platform can be challenging, but our team is committed to providing the support and resources necessary to help users succeed. In short, redirecting users to the dashboard page view is just one of the many ways we strive to provide an exceptional user experience. */
Route::get('dashboard', [DashboardController::class, 'index'])->name('dashboard');
/* To ensure the proper functioning of our website, it is important to save the new Facebook add token to the database. This token is a unique identifier that allows Facebook to recognize our website and serve targeted ads to our users. By storing this token in our database, we can ensure that our users are seeing the most relevant advertisements, while also helping us to optimize our ad campaigns. Additionally, this information can be used to track the effectiveness of our ads and make data-driven decisions about future advertising efforts. Therefore, it is imperative that we save the new Facebook add token to the database page view, as it is an essential component of our overall marketing strategy. */
Route::get('fb-toekn-add', [ChannelController::class, 'index'])->name('addfbtoken');
/*In order to manage the religion of a particular caste, there are a number of actions that can be taken. One option is to save any changes that have been made, ensuring that they will be preserved for future reference. Another option is to update the information associated with a particular caste, which can be useful if there are new developments that need to be recorded. Additionally, it may be necessary to delete a caste altogether if it is no longer relevant or if it has been merged with another group. Finally, updating the page view of a particular caste can help to ensure that it is more easily found by others who are searching for information on that topic. */
Route::get('manage-caste', [CasteController::class, 'index'])->name('managecaste');
/* To get a list of the existing castes for the page view, we can undertake a few different steps. Firstly, we can gather information on the current castes within the system, and then we can analyze and organize this data into an easily accessible format. Additionally, we can look at any potential updates or changes to the caste system, and determine how these changes may affect the existing castes. Finally, we can consider the various use cases for this list of castes, and ensure that the information is presented in a clear and concise manner to meet the needs of the intended audience. */
Route::get('show-caste-list', [CasteController::class, 'show'])->name('showcastelist');
/*To ensure that the new caste name is properly documented and recorded, we must first determine where it belongs in the caste list. Once identified, we can add it to the appropriate location in the list or database. It's important to keep the caste list up-to-date and accurate, as it serves as a vital resource for various purposes, such as research, historical analysis, and social development. By adding the new caste name to the list, we contribute to the preservation and growth of our understanding of social structures and hierarchies. */
Route::post('save-caste-name', [CasteController::class, 'store'])->name('savecaste');
/*To ensure that the caste list or database is up-to-date, it is important to regularly update it with any changes to caste names or affiliations. This will ensure that all members of the community are properly represented and that the database accurately reflects the diversity of the population. Additionally, it may be helpful to include more detailed information about each caste, such as their historical significance or current social and economic status. This can provide a more nuanced understanding of the caste system and its impact on society. Overall, regularly updating and expanding the caste list or database can play an important role in promoting social justice and equality for all members of the community. */
Route::post('update-caste-details', [CasteController::class, 'update'])->name('updatecaste');
/* One important aspect to consider when dealing with failed transactions on Paytm and Razorpay is to track and analyze the page views associated with these events. By doing so, you can identify potential issues with the user interface or the payment gateway that may be causing transactions to fail. It is also important to communicate clearly with the user regarding the reason for the failure and provide possible solutions or next steps to resolve the issue. For example, you may suggest that the user check their bank account balance or contact their bank to ensure that there are no issues on their end. Additionally, it may be helpful to provide alternative payment options to the user in case the issue cannot be resolved with the current payment method. By taking these steps, you can not only increase the chances of a successful transaction but also improve the user experience overall.*/
Route::get('get-failed-transaction', [UserController::class, 'getFailedTransaction'])->name('getfailedtxn');
/* In order to access records of failed transactions by their respective teams, a user must first be defined. This user will have the necessary permissions to view and analyze data related to failed transactions. Additionally, the user will be able to access this data in a team-wise manner, meaning that they can analyze the performance of each team with regards to failed transactions. The team leaders will also have access to this information, allowing them to identify areas of weakness and to take corrective measures to ensure that the team is performing at its best. By having a designated user and team-wise access to failed transaction data, the organization can ensure that its teams are operating efficiently and effectively. */
Route::post('save-txn-access-data', [UserController::class, 'getTransactionList'])->name('saveacceslogs');
/* The company aims to manage a website plan that is highly visible to clients. This website will offer various plans that clients can choose from, depending on their specific needs and the expected page views they anticipate. The website plan will be designed to ensure that clients can easily navigate through it, and will provide detailed information about each plan and its corresponding features. Additionally, the website plan will incorporate various payment options to ensure that clients can choose the most convenient method for them. The company is committed to providing clients with a robust and reliable website plan that meets their specific needs and exceeds their expectations.*/
Route::get('manage-website-plans', [WebsitePlanController::class, 'showPage'])->name('mangewebplans');
/* Upon visiting the page, you will be able to view a list of all the users who have logged into our database. This feature is particularly useful for administrators who need to keep track of user activity and ensure the security of our system. The user logging page also provides detailed information about each user, including their login history, IP address, and login times. In addition, the page allows you to sort users by various criteria, such as login date, location, and device type, making it easy to identify patterns and potential security threats. By regularly monitoring user activity through this page, we can ensure the integrity and safety of our system, as well as provide valuable insights into user behavior and usage patterns.*/
Route::get('user-login-details', [UserController::class, 'userLoginDetails'])->name('userlogindetails');
/* To ensure that clients are able to choose the best plan according to their needs and page views, it is important to develop an effective website plan that is visible and easily navigable. This can be achieved by creating a clear and concise layout that outlines the various available options and features of each plan. Additionally, the website should be designed in such a way that clients can easily compare and contrast the different plans and make an informed decision. By providing this level of detail and clarity, clients are more likely to trust the website and choose a plan that best suits their needs. Moreover, the website should be regularly updated to ensure that the information remains relevant and up-to-date. This will not only enhance the user experience but also help to establish the website as a reliable source of information and services. */
Route::get('get-website-plans', [WebsitePlanController::class, 'show'])->name('getwebplans');

/* To ensure that clients are able to choose the best plan according to their needs and page views, it is important to develop an effective website plan that is visible and easily navigable. This can be achieved by creating a clear and concise layout that outlines the various available options and features of each plan. Additionally, the website should be designed in such a way that clients can easily compare and contrast the different plans and make an informed decision. By providing this level of detail and clarity, clients are more likely to trust the website and choose a plan that best suits their needs. Moreover, the website should be regularly updated to ensure that the information remains relevant and up-to-date. This will not only enhance the user experience but also help to establish the website as a reliable source of information and services. */

Route::get('get-web-plan-category', [WebsitePlanController::class, 'showCategory'])->name('getwebplancats');
/*
To create a comprehensive plan for managing a website, it is important to consider various aspects that may affect its success. One of the first steps is to determine the categories that the website will cover. This can be done by analyzing the target audience and identifying their needs and interests. Next, it is important to develop a content strategy that aligns with the categories identified. This can include creating a content calendar, conducting keyword research for SEO optimization, and determining the tone and voice of the website. Additionally, a social media strategy can be developed to support the website's goals and drive traffic to the site. It is also important to consider the technical aspects of website management, such as choosing a suitable hosting service, ensuring website security, and monitoring website analytics to track performance and identify areas for improvement. By taking a holistic approach to website management, it is possible to create a successful and engaging online presence that meets the needs of both the website owner and the target audience
 */
Route::post('category-manage', [WebsitePlanController::class, 'manageCategory'])->name('category_manage');
/*
To create a comprehensive plan for managing a website, it is important to consider various aspects that may affect its success. One of the first steps is to determine the categories that the website will cover. This can be done by analyzing the target audience and identifying their needs and interests. Next, it is important to develop a content strategy that aligns with the categories identified. This can include creating a content calendar, conducting keyword research for SEO optimization, and determining the tone and voice of the website. Additionally, a social media strategy can be developed to support the website's goals and drive traffic to the site. It is also important to consider the technical aspects of website management, such as choosing a suitable hosting service, ensuring website security, and monitoring website analytics to track performance and identify areas for improvement. By taking a holistic approach to website management, it is possible to create a successful and engaging online presence that meets the needs of both the website owner and the target audience
*/
Route::post('post-website-plans', [WebsitePlanController::class, 'postwebsitePllanData'])->name('postwebplan');
/*
 To obtain a website plan using their IDs, first, you will need to access the website's database. Once inside, you can search for the specific IDs and retrieve their corresponding plans. It is important to ensure that the IDs are accurate and up-to-date in order to obtain the correct plan. Additionally, it may be useful to include information about the purpose and benefits of obtaining a website plan, such as ensuring efficient website management and facilitating communication between team members. Finally, it is important to consider the potential challenges that may arise during the process, such as data privacy concerns or technical difficulties, and plan accordingly to mitigate these risks.
*/
Route::get('get-web-plan-by-id', [WebsitePlanController::class, 'getPlantByCategory'])->name('getplanbyids');
Route::get('show-logged-in-user-list', [UserController::class, 'showUserLogin'])->name('getuserlogindetails');
Route::get('update-logout-time', [UserController::class, 'updateLogoutTime'])->name('updatelogouttime');
